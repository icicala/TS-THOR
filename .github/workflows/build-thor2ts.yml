name: Build thor2timesketch

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
env:
  PYTHON_VERSION: 3.9
jobs:
  quality-and-security:
    name: Code Quality and Security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Ruff (auto-fix)
        run: ruff check --fix .

      - name: MyPy
        run: mypy -p thor2timesketch

      - name: Bandit security scan
        run: |
          pip install bandit
          bandit -r src/thor2timesketch

      - name: Dependency audit
        run: |
          pip install pip-audit
          pip freeze --exclude-editable > audit-requirements.txt
          pip-audit --requirement audit-requirements.txt
  build:
    name: Build distribution 📦
    needs: quality-and-security
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      artifact: python-package-distributions
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build hatch-vcs

      - name: Build package
        run: python -m build

      - name: Store distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/project/thor2timesketch
    permissions:
        id-token: write

    steps:
      - name: Download distribution packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}

  verify-testpypi-installation:
    name: Verify TestPyPI Installation
    needs: publish-testpypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create test environment
        run: |
          python -m venv thor2ts-venv
          echo "PATH=$GITHUB_WORKSPACE/thor2ts-venv/bin:$PATH" >> $GITHUB_ENV

      - name: Install from TestPyPI
        run: |
          source thor2ts-venv/bin/activate
          sleep 30
          pip install --index-url https://test.pypi.org/simple/ \
                      --extra-index-url https://pypi.org/simple \
                      thor2timesketch

      - name: Verify version
        run: |
          source thor2ts-venv/bin/activate
          thor2ts --version