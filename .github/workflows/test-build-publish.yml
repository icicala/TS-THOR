name: Test, Build & Publish thor2timesketch

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_target:
        description: 'Publish target (skip/test/prod)'
        required: true
        default: 'skip'
        type: choice
        options:
          - skip
          - test
          - prod

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_DEFAULT: 3.9

jobs:
  quality:
    name: Lint & Type-Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_DEFAULT }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
      - run: pip install -e ".[dev]"
      - run: ruff check --fix .
      - run: mypy -p thor2timesketch

  test:
    name: Test ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
      - run: |
          pip install pytest pytest-cov
          pip install -e .
      - run: pytest --cov=thor2timesketch --junitxml=report.xml
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pytest-report-${{ matrix.os }}-${{ matrix.python-version }}
          path: report.xml
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage.xml

  publish:
    needs: [quality, test]
    if: needs.quality.result == 'success' && needs.test.result == 'success' &&
        (github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_target != 'skip'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_DEFAULT }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-publish-${{ hashFiles('**/pyproject.toml') }}
      - run: |
          pip install build twine hatch-vcs-version
          python -m build
          python -m twine check dist/*
      - name: Publish to TestPyPI
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish_target == 'test'
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      - name: Publish to PyPI
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_target == 'prod')
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Verify install
        run: |
          python -m venv thor2ts-venv
          . thor2ts-venv/bin/activate || source thor2ts-venv/bin/activate
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.publish_target }}" == "test" ]]; then
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple thor2timesketch
          else
            pip install thor2timesketch
          fi
          thor2ts --version